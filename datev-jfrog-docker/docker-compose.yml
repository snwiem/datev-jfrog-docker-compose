version: "3.5"
## -------------------------------------------
## DATEV Specific docker compose configuration
## for JFrog services
## -------------------------------------------
services:

  artifactory:
    image: ${JFROG_DOCKER_REPO}/artifactory-pro:${ARTIFACTORY_VERSION}
    container_name: artifactory
    ports:
     - ${ARTIFACTORY_SERVER_PORT}:${ARTIFACTORY_SERVER_PORT}
    volumes:
     - ${DOCKER_DATA}/artifactory:/var/opt/jfrog/artifactory
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    networks:
      - jfrog-network
    

  xray-server:
    image: ${JFROG_DOCKER_REPO}/xray-server:${XRAY_VERSION}
    container_name: xray-server
    ports:
      - ${XRAY_SERVER_PORT}:${XRAY_SERVER_PORT}
    depends_on:
      - mongodb
      - postgres
      - rabbitmq
    volumes:
      - "$DOCKER_DATA/xray:/var/opt/jfrog/xray/data"
    environment:
      - "XRAYCONFIGPATH=/var/opt/jfrog/xray/data"
      - "DOCKER_COMPOSE_FLAGS=$DOCKER_COMPOSE_FLAGS"
      - "DOCKER_COMPOSE_XRAY_FLAGS=$DOCKER_COMPOSE_XRAY_SERVER_FLAGS"
    restart: always
    networks:
      - jfrog-network

  xray-indexer:
    image: ${JFROG_DOCKER_REPO}/xray-indexer:${XRAY_VERSION}
    container_name: xray-indexer
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - "$DOCKER_DATA/xray:/var/opt/jfrog/xray/data"
    environment:
      - "XRAYCONFIGPATH=/var/opt/jfrog/xray/data"
      - "DOCKER_COMPOSE_FLAGS=$DOCKER_COMPOSE_FLAGS"
      - "DOCKER_COMPOSE_XRAY_FLAGS=$DOCKER_COMPOSE_XRAY_INDEXER_FLAGS"
    restart: always
    networks:
       - jfrog-network

  xray-analysis:
    image: ${JFROG_DOCKER_REPO}/xray-analysis:${XRAY_VERSION}
    container_name: xray-analysis
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - "$DOCKER_DATA/xray:/var/opt/jfrog/xray/data"
    environment:
      - "XRAYCONFIGPATH=/var/opt/jfrog/xray/data"
      - "DOCKER_COMPOSE_FLAGS=$DOCKER_COMPOSE_FLAGS"
      - "DOCKER_COMPOSE_XRAY_FLAGS=$DOCKER_COMPOSE_XRAY_ANALYSIS_FLAGS"
    restart: always
    networks:
      - jfrog-network

  xray-persist:
    image: ${JFROG_DOCKER_REPO}/xray-persist:${XRAY_VERSION}
    container_name: xray-persist
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - "$DOCKER_DATA/xray:/var/opt/jfrog/xray/data"
    environment:
      - "XRAYCONFIGPATH=/var/opt/jfrog/xray/data"
      - "DOCKER_COMPOSE_FLAGS=$DOCKER_COMPOSE_FLAGS"
      - "DOCKER_COMPOSE_XRAY_FLAGS=$DOCKER_COMPOSE_XRAY_PERSIST_FLAGS"
    restart: always
    networks:
      - jfrog-network

  rabbitmq:
    image: ${JFROG_DOCKER_REPO}/xray-rabbitmq:$RABBITMQ_VERSION
    container_name: xray-rabbitmq
    #hostname: $DOCKER_SERVER_HOSTNAME
    ports:
      - 15672:15672
    volumes:
      - "$DOCKER_DATA/rabbitmq:/var/lib/rabbitmq"
    environment:
      - "RABBITMQ_ERLANG_COOKIE=$RABBITMQ_ERLANG_COOKIE"
    restart: always
    networks:
      jfrog-network:
        aliases:
          - ${XRAY_RABBITMQ_HOSTNAME}

  postgres:
    image: ${JFROG_DOCKER_REPO}/xray-postgres:$POSTGRES_VERSION
    container_name: xray-postgres
    environment:
      - "POSTGRES_USER=$POSTGRES_USER"
      - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
      - "POSTGRES_DB=$POSTGRES_DB"
    volumes:
      - "$DOCKER_DATA/postgres:/var/lib/postgresql/data"
    restart: always
    networks:
      jfrog-network:
        aliases:
          - ${XRAY_POSTGRES_HOSTNAME}

  mongodb:
    image: ${JFROG_DOCKER_REPO}/xray-mongo:$MONGO_VERSION
    container_name: xray-mongodb
    entrypoint: /bin/bash -c "chmod 777 /data/logs; /entrypoint.sh --logpath /data/logs/xray-mongo.log --auth"
    volumes:
      - "$DOCKER_DATA/mongodb/logs:/data/logs"
      - "$DOCKER_DATA/mongodb/configdb:/data/configdb"
      - "$DOCKER_DATA/mongodb/db:/data/db"
    restart: always
    networks:
      jfrog-network:
        aliases:
          - ${XRAY_MONGODB_HOSTNAME}

## ------------------------------------------------------------ Docker networks

networks:
  jfrog-network:
    name: jfrog-network
